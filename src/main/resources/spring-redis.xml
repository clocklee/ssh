<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
			http://www.springframework.org/schema/context
      		http://www.springframework.org/schema/context/spring-context-4.3.xsd
      		http://www.springframework.org/schema/cache 
      		http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
">

	<!-- ******************** redis缓存   **********************-->  
	<!-- 注解一定要配置，不然不起作用 -->  
	<cache:annotation-driven />
	
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
		<property name="maxIdle" value="${redis.maxIdle}" />
		<!-- <property name="maxActive" value="${redis.maxActive}" /> -->
		<property name="maxTotal" value="${redis.maxTotal}" />  
		<property name="minIdle" value="${redis.minIdle}" />  
		<property name="testOnBorrow" value="${redis.testOnBorrow}" /> 
		<property name="testOnReturn" value="true"/> 
	</bean>  
    
    <!-- redis服务器中心 -->
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
		p:host-name="${redis.host}" 
		p:port="${redis.port}" 
		p:password="${redis.pass}"  
		p:pool-config-ref="poolConfig"/>  
    
    
    <!-- <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />  
    </bean> -->
    
    <bean id="stringSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    
    <!-- 开启事务，可以通过transcational注解控制 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
		<property name="connectionFactory" ref="connectionFactory" />  
		<property name="keySerializer" ref="stringSerializer" />
		<property name="valueSerializer">  
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
		</property>
        <property name="enableTransactionSupport" value="true" />
	</bean>
	
	<!-- 配置缓存 -->
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg ref="redisTemplate" />
	</bean>

</beans>




